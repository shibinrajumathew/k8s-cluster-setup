---
- hosts: all
  become: yes
  tasks:
    - name: Install required dependencies
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Ensure Docker is started and enabled
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install Kubernetes components
      apt:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes components at current version
      apt:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        state: present
        mark_hold: yes

- hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes master node
      shell: |
        kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Set up kubeconfig for root user
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Install Calico network plugin
      shell: |
        kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - name: Generate and share join command with worker nodes
      shell: kubeadm token create --print-join-command
      register: join_command

- hosts: worker
  become: yes
  tasks:
    - name: Join worker nodes to the Kubernetes cluster
      shell: "{{ hostvars['master-node']['join_command']['stdout'] }} --ignore-preflight-errors=all"
      args:
        creates: /etc/kubernetes/kubelet.conf
