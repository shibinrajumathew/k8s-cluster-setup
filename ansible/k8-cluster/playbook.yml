---
- hosts: all
  become: yes
  tasks:
    - name: Update and install dependencies
      apt:
        update_cache: yes
        name: 
          - ca-certificates
          - curl
          - apt-transport-https
          - gnupg
        state: present

    - name: Add Docker's official GPG key
      shell: |
        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        chmod a+r /etc/apt/keyrings/docker.asc

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update package list
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update package list again
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes packages at current version
      ansible.builtin.dpkg_selections:
        name: 
          - kubelet
          - kubeadm
          - kubectl
        selection: hold

- hosts: master
  become: yes
  tasks:
    - name: Initialize Kubernetes cluster
      shell: kubeadm init --pod-network-cidr=192.168.0.0/16
      register: init_output
      ignore_errors: yes

    - name: Create .kube directory for kubectl configuration
      file:
        path: $HOME/.kube
        state: directory
        mode: '0755'

    - name: Copy kube config to user's home directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        remote_src: yes

    - name: Change ownership of kube config
      command: chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Install Calico network plugin
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - name: Extract join command
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command for later use
      local_action: copy content="{{ join_command.stdout }}" dest=./join_command.txt

- hosts: workers
  become: yes
  tasks:
    - name: Run join command on worker nodes
      shell: "{{ lookup('file', './join_command.txt') }}"
